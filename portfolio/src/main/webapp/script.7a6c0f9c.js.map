{"version":3,"sources":["script.js"],"names":["projectCounter","projectList","showPicture","picture","button","portrait","document","getElementById","pictureButton","style","display","innerHTML","showProjects","projectContainer","li","createElement","anchor","desc","textContent","href","classList","add","target","appendChild","projectButton","loadHomePage","inputForm","log","link","getComments","getLogStatus","logStatus","isLoggedIn","loggedIn","url","fetch","response","json","loadComments","comments","commentContainer","forEach","commentObject","childDiv","icon","setAttribute","id","timeStamp","author","comment","data","loadMemePage","fetchBlobstoreUrlAndShowForm","loadMemes","memeContainer","memeObject","memeDiv","memeImg","memeDesc","src","deleteThis","elementType","elementId","method","headers","body","JSON","stringify","type","deleteComments","deleteMemes","then","text","imageUploadUrl","uploadBox","memeForm","action"],"mappings":"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","file":"script.7a6c0f9c.js","sourceRoot":"src","sourcesContent":["// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar projectCounter = 0;\nvar projectList = [\n    [\"Gitlet (Private)\", \"This project was my favorite and final project for my CS61B class at Berkeley. The gist of the project was to recreate the popular version-control system: Git, but a bit more simplified.\"],\n    [\"Link! (Deprecated)\", \"My first team-developed project, developed during Google's 2019 CSSI program. We developed a web application that determined mutual availaibilites among friends and found events for everyone to hang out using differnt API's.\", \"https://linkwithfriends.appspot.com\"],\n    [\"Simon (Play now!)\", \"My final project in my first coding class. Developed a web application that mimicked the color-sequence memorization game: Simon. High score: 52.\", \"https://codepen.io/erinlimbo/full/qzJdwj\"]\n    ];\n\n\n/** \n * Displays/hides portrait picture.\n * @param {!String} picture string id that specifies which picture to apply function to.\n * @param {!String} picture button id that specifies which button to update.\n */\nfunction showPicture(picture, button) {\n    const portrait = document.getElementById(picture);\n    const pictureButton = document.getElementById(button);\n    if (portrait.style.display === \"block\") {\n        portrait.style.display = \"none\";\n        pictureButton.innerHTML = \"See me!\";\n\n    } else {\n        portrait.style.display = \"block\";\n        pictureButton.innerHTML = \"Unsee me :(\" \n    }\n}\n\n\n/**\n * Displays the projects and their descriptions one at a time.\n */\nfunction showProjects() {\n    const projectContainer = document.getElementById(\"project-list\");\n    if (projectCounter < 3) {\n        let li = document.createElement('li');\n        let anchor = document.createElement('a');\n        let desc = document.createElement('p');\n        anchor.textContent = projectList[projectCounter][0];\n        if (projectCounter > 0) {\n            anchor.href = projectList[projectCounter][2];\n        }\n        anchor.classList.add(\"project-links\");\n        anchor.target = \"_blank\";\n        li.appendChild(anchor);\n        desc.textContent = projectList[projectCounter][1];\n        li.appendChild(desc);\n        projectContainer.appendChild(li)\n    }\n    projectCounter++;\n    if (projectCounter >= 3) {\n        let projectButton = document.getElementById(\"project-button\");\n        projectButton.style.display = \"none\";\n    }\n}\n\n\n/** Initiate the home page */\nasync function loadHomePage() {\n    const inputForm = document.getElementById(\"input-form\");\n    const log = document.getElementById(\"logging\");\n    const link = document.getElementById(\"log-link\");\n\n    await getComments();\n    const logStatus = await getLogStatus();\n    const isLoggedIn = logStatus.loggedIn;\n\n    if (isLoggedIn) {\n        link.innerHTML = \"logout\";\n        log.style.display = \"block\";\n        inputForm.style.display = \"block\";\n    } else {\n        link.innerHTML = \"login\"\n        log.style.display = \"block\";\n    }\n    link.href = logStatus.url\n}\n\n/** Return the contents of the `/log` server. */\nasync function getLogStatus() {\n    const response = await fetch('/log');\n    const logStatus = await response.json();\n    return logStatus;\n}\n\n/** Display the comments acquired from the datastore */\nfunction loadComments(comments) {\n    const commentContainer = document.getElementById(\"comments\");\n    comments.forEach(commentObject => {\n        const childDiv = document.createElement(\"div\");\n        const icon = document.createElement(\"button\");\n\n        icon.innerHTML = '<i class=\"fa fa-trash-o\"></i>';\n        icon.classList.add(\"trash\");\n        icon.setAttribute( \"onClick\", \n            'deleteThis(\"Comment\", ' + commentObject.id + ')');\n\n        childDiv.textContent = \"[\" + commentObject.timeStamp + \"] \" \n            + commentObject.author + \": \" + commentObject.comment;\n        childDiv.appendChild(icon);     \n   \n        commentContainer.appendChild(childDiv);\n    })\n}\n\n/** Acquire a comment from /data and display it. */\nasync function getComments() {\n    let response = await fetch('/data');\n    let data = await response.json();\n    loadComments(data);\n}\n\n\n/** Initiates the meme page */\nasync function loadMemePage() {\n    await fetchBlobstoreUrlAndShowForm();\n    await loadMemes();\n}\n\n/** Loads the memes from the page. */\nasync function loadMemes() {\n    const memeContainer = document.getElementById(\"meme-container\");\n    \n    const response = await fetch('/meme-handler');\n    const data = await response.json();\n    data.forEach(memeObject => {\n\n        const memeDiv = document.createElement(\"div\");\n        const memeImg = document.createElement(\"img\");\n        const icon = document.createElement(\"button\");\n        const memeDesc = document.createElement(\"p\");\n\n        memeImg.src = \"/blob-serve-url?blob-key=\" + memeObject.url; \n        memeImg.classList.add(\"meme-image\");\n        memeDesc.innerHTML = memeObject.desc\n\n        icon.innerHTML = '<i class=\"fa fa-trash-o\"></i>';\n        icon.classList.add(\"trash\");\n        icon.setAttribute( \"onClick\", \n            'deleteThis(\"Meme\", ' + memeObject.id + ')');\n        memeDiv.innerHTML = \"[\" + memeObject.timeStamp + \"] \" \n            + memeObject.author + \":\";\n        memeDiv.appendChild(memeImg);\n        memeDiv.appendChild(memeDesc);\n        memeDesc.appendChild(icon);\n\n        memeDiv.classList.add(\"meme-div\");\n        memeContainer.appendChild(memeDiv);\n\n    })\n}\n\n/** Delete this element. */\nasync function deleteThis(elementType, elementId) {\n    await fetch('/delete', {\n        method: 'POST',\n        headers: {\n            'Content-type': \"application/json\",\n        },\n        body: JSON.stringify({\n            type: elementType, \n            id: elementId\n        }),\n    });\n}\n\n/** Delete all comments from the page and datastore. */\nasync function deleteComments() {\n    await fetch('/delete-data', {\n        method: 'POST',\n    });\n    getComments();\n}\n\n/** Delete all memes from the page and datastore. */\nasync function deleteMemes() {\n    let response = await fetch('/delete-memes', {\n        method: 'POST',\n    });\n    loadMemes();\n}\n\n/** Fetches the blob at the url. */\nfunction fetchBlobstoreUrlAndShowForm() {\n    fetch('/blobstore-upload-url')\n        .then(response => {\n            return response.text();\n        })\n        .then(imageUploadUrl => {\n            const uploadBox = document.getElementById('upload-box');\n            const memeForm = document.getElementById('meme-form');\n            memeForm.action = imageUploadUrl;\n            uploadBox.style.display = \"block\";\n        });\n}\n"]}